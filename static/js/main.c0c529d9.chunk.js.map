{"version":3,"sources":["components/Option.js","components/Options.js","components/AddOption.js","components/Header.js","components/Action.js","components/OptionModal.js","components/Indecision.js","App.js","reportWebVitals.js","index.js"],"names":["Option","props","className","count","optionText","onClick","e","handleDeleteOption","Options","handleRemoveAll","options","length","map","option","index","AddOption","state","error","undefined","handleAddOpton","preventDefault","target","elements","value","trim","setState","this","onSubmit","type","name","React","Component","Header","title","subtitle","Action","handpack","disabled","hasOption","OptionModal","isOpen","selectedOption","onRequestClose","optionClose","contentLabel","ariaHideApp","closeTimeoutMS","Indecision","prevOption","optionToggle","filter","opt","Random","Math","floor","random","result","indexOf","prevState","concat","json","localStorage","getItem","JSON","parse","prevProps","stringify","setItem","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0c529d9.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Option = (props) => (\r\n  <div className=\"option\">\r\n    <p className=\"option__text\">\r\n      {props.count}.{props.optionText}\r\n    </p>\r\n    <button\r\n      className=\"button button__link\"\r\n      onClick={(e) => {\r\n        props.handleDeleteOption(props.optionText);\r\n      }}\r\n    >\r\n      Remove\r\n    </button>\r\n  </div>\r\n);\r\nexport default Option;\r\n","import React from \"react\";\r\nimport Option from \"./Option\";\r\nconst Options = (props) => (\r\n  <div>\r\n    <div className=\"widget__header\">\r\n      <h3 className=\"widget__title\">Your Options</h3>\r\n      <button className=\"button button__link\" onClick={props.handleRemoveAll}>\r\n        Remove all\r\n      </button>\r\n    </div>\r\n\r\n    {props.options.length === 0 && (\r\n      <p className=\"widget__message\">Please add an option to get started !</p>\r\n    )}\r\n    {props.options.map((option, index) => (\r\n      <Option\r\n        key={option}\r\n        optionText={option}\r\n        count={index + 1}\r\n        handleDeleteOption={props.handleDeleteOption}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\nexport default Options;\r\n","import React from \"react\";\r\nexport default class AddOption extends React.Component {\r\n  state = { error: undefined };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  handleAddOpton = (e) => {\r\n    e.preventDefault();\r\n    const option = e.target.elements.option.value.trim();\r\n    const error = this.props.handleAddOpton(option);\r\n    this.setState(() => ({ error }));\r\n    if (!error) {\r\n      e.target.elements.option.value = \"\";\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.error && <p className=\"addOption\">{this.state.error}</p>}\r\n        <form className=\"add-option\" onSubmit={this.handleAddOpton}>\r\n          <input className=\"add-option-input\" type=\"text\" name=\"option\" />\r\n          <button className=\"button\">Add Option</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nconst Header = (props) => (\r\n  <div className=\"header\">\r\n    <div className=\"container\">\r\n      <h1 className=\"header__title\">{props.title}</h1>\r\n      {props.subtitle && <h2 className=\"header__subtitle\">{props.subtitle}</h2>}\r\n    </div>\r\n  </div>\r\n);\r\nexport default Header;\r\n","import React from \"react\";\r\nconst Action = (props) => (\r\n  <div>\r\n    <button\r\n      className=\"big-button\"\r\n      onClick={props.handpack}\r\n      disabled={!props.hasOption}\r\n    >\r\n      What should I do ?\r\n    </button>\r\n  </div>\r\n);\r\nexport default Action;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst OptionModal = (props) => (\r\n  <Modal\r\n    isOpen={!!props.selectedOption}\r\n    onRequestClose={props.optionClose}\r\n    contentLabel=\"Selected Option\"\r\n    ariaHideApp={false}\r\n    closeTimeoutMS={200}\r\n    className=\"modal\"\r\n  >\r\n    <h2 className=\"modal-title\">Selected Option</h2>\r\n    {props.selectedOption && (\r\n      <p className=\"modal-body\">{props.selectedOption}</p>\r\n    )}\r\n    <button className=\"button\" onClick={props.optionClose}>\r\n      Ok\r\n    </button>\r\n  </Modal>\r\n);\r\nexport default OptionModal;\r\n","import React from \"react\";\r\nimport Options from \"./Options\";\r\nimport AddOption from \"./AddOption\";\r\nimport Header from \"./Header\";\r\nimport Action from \"./Action\";\r\nimport OptionModal from \"./OptionModal\";\r\nexport default class Indecision extends React.Component {\r\n  state = {\r\n    options: [],\r\n    selectedOption: undefined,\r\n  };\r\n  handleRemoveAll = () => {\r\n    this.setState((prevOption) => {\r\n      return {\r\n        options: [],\r\n      };\r\n    });\r\n  };\r\n  handleDeleteOption = (optionToggle) => {\r\n    this.setState((option) => ({\r\n      options: option.options.filter((opt) => {\r\n        return optionToggle !== opt;\r\n      }),\r\n    }));\r\n  };\r\n  optionClose = () => {\r\n    this.setState(() => ({\r\n      selectedOption: undefined,\r\n    }));\r\n  };\r\n  handpack = () => {\r\n    const Random = Math.floor(Math.random() * this.state.options.length);\r\n    const result = this.state.options[Random];\r\n    this.setState(() => ({\r\n      selectedOption: result,\r\n    }));\r\n  };\r\n  handleAddOpton = (option) => {\r\n    if (!option) {\r\n      return \"Enter valed value to add item\";\r\n    } else if (this.state.options.indexOf(option) > -1) {\r\n      return \"This option already exists\";\r\n    } else {\r\n      this.setState((prevState) => {\r\n        return {\r\n          options: this.state.options.concat([option]),\r\n        };\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    try {\r\n      const json = localStorage.getItem(\"options\");\r\n      const options = JSON.parse(json);\r\n      if (options) {\r\n        this.setState(() => ({ options }));\r\n      }\r\n    } catch (error) {\r\n      //Do nothing at all\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.options.length !== this.state.options.length) {\r\n      const json = JSON.stringify(this.state.options);\r\n      localStorage.setItem(\"options\", json);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"This is componentWillUnmount !!!\");\r\n  }\r\n\r\n  render() {\r\n    const title = \"Indecision\";\r\n    const subtitle = \"Put your life in the hands of a computer\";\r\n    return (\r\n      <div>\r\n        <Header title={title} subtitle={subtitle} />\r\n        <div className=\"container\">\r\n          <Action\r\n            handpack={this.handpack}\r\n            hasOption={this.state.options.length > 0}\r\n          />\r\n          <div className=\"widget\">\r\n            <Options\r\n              handleDeleteOption={this.handleDeleteOption}\r\n              options={this.state.options}\r\n              handleRemoveAll={this.handleRemoveAll}\r\n            />\r\n            <AddOption handleAddOpton={this.handleAddOpton} />\r\n          </div>\r\n        </div>\r\n        <OptionModal\r\n          selectedOption={this.state.selectedOption}\r\n          optionClose={this.optionClose}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport Indecision from \"./components/Indecision\";\nconst App = () => <Indecision />;\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"normalize.css\";\nimport \"./style/style.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}